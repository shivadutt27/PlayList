package playlist;

import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;


/* 
 1. This class instantiates the Album object 
 2. Album Objects contains the Arraylist of songs
 3. This class provides the method to add, read, update songs 
 */
public class Album {
	
	private String albumName;
	private String artistName;
	private ArrayList<Song> songs;
	
	public Album(String albumName, String artistName)
	{
		this.albumName = albumName;
		this.artistName = artistName;
		this.songs = new ArrayList<Song>();
	}

	/*
	 * We are adding song in the Album class to make sure -
	 * - song must be present in the Album class.
	 */
	public boolean addSong(String title, double duration)
	{
		boolean flag = false;
		Song foundSong = findSong(title); 
		if(foundSong == null)
		{
			Song songObj = new Song(title,duration);
			songs.add(songObj);
			System.out.println(songObj.getTitle()+ " has added to the songList of "+ this.albumName);
			flag = true;
		}
		else {
			System.out.println("Song is already present in the list");
		}
		return flag;
	}
	
	
	public boolean addToPlayList(int trackNum, LinkedList<Song> playList)
	{
		boolean flag = false;
		Song foundSong = findSong(trackNum);
		if(foundSong!=null)
		{
			playList.add(foundSong);
			flag = true;
			System.out.println(foundSong.getTitle()+" SuccessFully added to "+ String.valueOf(playList));
		}
		else {
			System.out.println("No Song Present in the album " + this.albumName);
		}
		return flag;
	}
	
	
	public boolean addSong(String title, LinkedList<Song> playList)
	{
		boolean flag = false;
		Song foundSong = findSong(title);
		if(!foundSong.equals(null))
		{
			playList.add(foundSong);
			flag = true;
		}
		
		return flag;
	}
	
	
	public Song findSong(String title)
	{
		Song returnedSong = null;
		for(Song oneSong: songs)
		{
			if(oneSong.getTitle().equals(title))
			{
				returnedSong = oneSong;
			}
		}
		return returnedSong;
	}
	
	
	public Song findSong(int trackNumber)
	{
		Song returnedSong = null;
		for(Song oneSong: songs)
		{
			if(this.songs.indexOf(oneSong) == trackNumber) {
				returnedSong = oneSong;
			}
		}
		
		return returnedSong;
	}

	public String getAlbumName() {
		return albumName;
	}

	public void setAlbumName(String albumName) {
		this.albumName = albumName;
	}

	public ArrayList<Song> getSongs() {
		return songs;
	}

	public void setSongs(ArrayList<Song> songs) {
		this.songs = songs;
	}

}
