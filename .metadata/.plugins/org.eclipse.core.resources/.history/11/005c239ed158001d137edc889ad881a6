package playlist;

import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import java.util.ListIterator;

public class PlayList {

	private List<Album> albums;
	
	private LinkedList<Song> playListSongs;
	
	private Song song;
	private ListIterator<Song> songsIterator;
	
	public PlayList()
	{
		this.song = song;
		this.albums = new ArrayList<>();
		this.playListSongs = new LinkedList<>();
		songsIterator = playListSongs.listIterator();
	}

	public List<Album> getAlbums() {
		return albums;
	}

	public void setAlbums(List<Album> albums) {
		this.albums = albums;
	}

	public LinkedList<Song> getPlayListSongs() {
		return playListSongs;
	}

	public void setPlayListSongs(LinkedList<Song> playListSongs) {
		this.playListSongs = playListSongs;
	}

	public Song getSong() {
		return song;
	}

	public void setSong(Song song) {
		this.song = song;
	}
	
	
	
  //1. Finding the Songs in the Albums
	
	
	public int findSongInList(Song song)
	{
		int foundSong = this.playListSongs.indexOf(song);
		return foundSong;
	}
	
  // Adding a song in the playlist
	
	public boolean addSongInList(Song song)
	{
		boolean flag = false;
		
		if(findSongInList(song)<0)
		{
			this.playListSongs.add(song);
			System.out.println(song.getTitle()+" Song is added to the playlist");
			flag = true;
		}
		else {
			System.out.println("Song " + song.getTitle() + " is already present in the list");
		}
		return flag;
	}
	
	
	// Printing playList
	
	public void printPlayList()
	{
//		ListIterator<Song> songsIterator = this.playListSongs.listIterator();
		while(songsIterator.hasNext())
		{
			System.out.println(songsIterator.next().getTitle());
		}
	}
	
	
	// Functionality to skip forward to the next song
	
//	public void forwardSong()
//	{
//		Song currentSong = songsIterator.next();
//		while(songsIterator.hasNext())
//		{
//			System.out.println(songsIterator.);
//		}
//
//	}
	
	
	
	
	
	
	
	
	
	
	
}
